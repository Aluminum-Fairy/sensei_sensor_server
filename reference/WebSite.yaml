openapi: 3.0.0
info:
  title: WebSite
  version: '1.0'
servers:
  - url: 'http://localhost:3100'
paths:
  /user:
    get:
      summary: 'ユーザーページ: ユーザー情報の全取得'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicationDays:
                    type: object
                    properties:
                      monday:
                        type: boolean
                      tuesday:
                        type: boolean
                      wednesday:
                        type: boolean
                      thursday:
                        type: boolean
                      friday:
                        type: boolean
                  publicationTime:
                    type: object
                    properties:
                      start:
                        type: number
                      end:
                        type: number
                  publicationPlace:
                    type: object
                    properties:
                      private:
                        type: array
                        items:
                          type: object
                          properties:
                            roomId:
                              type: string
                            roomName:
                              type: string
                      public:
                        type: array
                        items:
                          type: object
                          properties:
                            roomId:
                              type: string
                            roomName:
                              type: string
                  groupList:
                    type: object
                    properties:
                      groups:
                        type: array
                        items:
                          type: object
                          properties:
                            groupId:
                              type: string
                            groupName:
                              type: string
              examples:
                test:
                  value:
                    publicationDays:
                      monday: true
                      tuesday: true
                      wednesday: true
                      thursday: true
                      friday: true
                    publicationTime:
                      start: 12
                      end: 17
                    publicationPlace:
                      private:
                        - roomId: '12'
                          roomName: どこか1
                      public:
                        - roomId: '11'
                          roomName: dokoka2
                    groupList:
                      groups:
                        - groupId: '13'
                          groupName: なんか
        '401':
          description: Unauthorized
      operationId: get-user
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
      description: ''
    parameters: []
  /users/publicationTime:
    get:
      summary: 'ユーザーページ: 公開時間の取得'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicationTime:
                    type: object
                    properties:
                      start:
                        type: number
                      end:
                        type: number
              examples: {}
        '401':
          description: Unauthorized
      operationId: get-users-publicationTime
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
      description: ''
    parameters: []
    put:
      summary: 'ユーザーページ: 公開時間の更新'
      operationId: put-users-publicationTime
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                publicationTime:
                  type: object
                  properties:
                    start:
                      type: number
                    end:
                      type: number
                  required:
                    - start
                    - end
              required:
                - publicationTime
              x-examples:
                example-1:
                  publicationTime:
                    start: 0
                    end: 0
        description: ''
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
      description: ''
  /users/publicationDays:
    get:
      summary: 'ユーザーページ: 公開曜日の取得'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicationDays:
                    type: array
                    items:
                      type: object
                      properties:
                        monday:
                          type: boolean
                        tuesday:
                          type: boolean
                        wednesday:
                          type: boolean
                        thursday:
                          type: boolean
                        friday:
                          type: boolean
                      required:
                        - monday
                        - tuesday
                        - wednesday
                        - thursday
                        - friday
                required:
                  - publicationDays
              examples:
                example-1:
                  value:
                    publicationDays:
                      - monday: true
                        tuesday: true
                        wednesday: true
                        thursday: true
                        friday: true
        '401':
          description: Unauthorized
      operationId: get-users-publicationDays
      parameters:
        - schema:
            type: string
          in: cookie
          required: true
          name: token
          description: JWT Token
      description: ''
    parameters: []
    put:
      summary: 'ユーザーページ: 公開曜日の更新'
      operationId: put-users-publicationDays
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      parameters:
        - schema:
            type: string
          in: cookie
          required: true
          name: token
          description: JWT Token
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                publicationDays:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                    properties:
                      monday:
                        type: boolean
                      tuesday:
                        type: boolean
                      wednesday:
                        type: boolean
                      thursday:
                        type: boolean
                      friday:
                        type: boolean
              required:
                - publicationDays
              x-examples:
                example-1:
                  publicationDays:
                    - monday: true
                      tuesday: true
                      wednesday: true
                      thursday: true
                      friday: true
  /users/publicationPlace:
    get:
      summary: 'ユーザーページ: 公開場所の取得'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicationPlace:
                    type: object
                    properties:
                      private:
                        type: array
                        items:
                          type: object
                          properties:
                            roomId:
                              type: string
                            roomName:
                              type: string
                      public:
                        type: array
                        items:
                          type: object
                          properties:
                            roomId:
                              type: string
                            roomName:
                              type: string
              examples: {}
        '401':
          description: Unauthorized
      operationId: get-users-publicationPlace
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
      description: ''
    parameters: []
    put:
      summary: 'ユーザーページ: 公開場所の更新'
      operationId: put-users-publicationPlace
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      description: 公開場所の更新
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                publicationPlace:
                  type: object
                  properties:
                    private:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        required:
                          - roomId
                          - roomName
                        properties:
                          roomId:
                            type: string
                            minLength: 1
                          roomName:
                            type: string
                            minLength: 1
                    public:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        required:
                          - roomId
                          - roomName
                        properties:
                          roomId:
                            type: string
                            minLength: 1
                          roomName:
                            type: string
                            minLength: 1
                  required:
                    - private
                    - public
              required:
                - publicationPlace
              x-examples:
                example-1:
                  publicationPlace:
                    private:
                      - roomId: string
                        roomName: string
                    public:
                      - roomId: string
                        roomName: string
  /users/group:
    get:
      summary: 'ユーザーページ: グループ一覧の取得'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    groupList:
                      groups:
                        - groupId: '13'
                          groupName: なんか
                properties:
                  groupList:
                    type: object
                    properties:
                      groups:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            groupId:
                              type: string
                              minLength: 1
                            groupName:
                              type: string
                              minLength: 1
              examples: {}
        '401':
          description: Unauthorized
      operationId: get-users-group
      description: ''
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
    parameters: []
    post:
      summary: 'ユーザーページ: グループの追加'
      operationId: post-users-group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    groupList:
                      groups:
                        - groupId: string
                          groupName: string
                properties:
                  groupList:
                    type: object
                    properties:
                      groups:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            groupId:
                              type: string
                              minLength: 1
                            groupName:
                              type: string
                              minLength: 1
                          required:
                            - groupId
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  groupList:
                    groups:
                      - groupName: string
              properties:
                groupName:
                  type: string
              required:
                - groupName
            examples: {}
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
  '/users/groups/{groupId}':
    parameters:
      - schema:
          type: string
        name: groupId
        in: path
        required: true
    delete:
      summary: 'ユーザーページ: グループの削除'
      operationId: delete-users-groups-groupId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
          required: true
    put:
      summary: 'ユーザーページ: グループの編集'
      operationId: put-users-groups-groupId
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  groupName: string
                  groupUsers:
                    - ぱまえ
                    - ぴまえ
                    - ぷまえ
                    - ぺまえ
                    - ぽまえ
              properties:
                groupName:
                  type: string
                  minLength: 1
                groupUsers:
                  type:
                    - array
                    - string
                  items: {}
              required:
                - groupName
                - groupUsers
            examples:
              test:
                value:
                  groupName: name
                  groupUsers:
                    - id1
                    - id2
                    - id3
                    - ...
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: JWT Token
  '/groups/{groupId}':
    get:
      summary: 'メインページ: グループの取得'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupName:
                    type: string
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        userName:
                          type: string
                        detectionTime:
                          type: string
                        roomName:
                          type: string
              examples:
                test-group-id:
                  value:
                    groupName: 謎の組織
                    users:
                      - userName: 誰か
                        detectionTime: '2021-10-01 10:00:11'
                        roomName: どこか
        '400':
          description: Bad Request
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    type: string
      operationId: get-group
    parameters:
      - schema:
          type: string
        name: groupId
        in: path
        required: true
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
